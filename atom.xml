<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>1</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jas-wang.fun/"/>
  <updated>2020-07-17T08:44:39.917Z</updated>
  <id>http://jas-wang.fun/</id>
  
  <author>
    <name>Jas wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP性能优化</title>
    <link href="http://jas-wang.fun/2020/07/17/php/"/>
    <id>http://jas-wang.fun/2020/07/17/php/</id>
    <published>2020-07-17T01:52:46.000Z</published>
    <updated>2020-07-17T08:44:39.917Z</updated>
    
    <content type="html"><![CDATA[<p>摘要<br>对线上站点做压力测试的时候，我们一定要将请求数和并发数，特别是并发数要设置的比较低，我们不能对线上的网站造成压力问题，不管是自己的还是别人的。<br>PHP性能问题一般不会超过占整个项目性能的50%，一般在30%~40%。</p><hr><p>PHP 性能问题的解决方向<br>一、语言级性能优化(一)</p><ul><li>指的是PHP语法基本功能，这部分优化比较简单易见、快速可行，比较快速看到效果</li></ul><p>1.压力测试工具 Apache Benchmark (ab)</p><ul><li>ab 是由 Apache 提供的压力测试软件，安装 apache 服务器时会自带该压力测试软件</li><li>基本使用[Linux 平台]<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ./ab -n1000 -c100 http://www.baidu.com/</span><br><span class="line"><span class="comment"># -n 请求数</span></span><br><span class="line"><span class="comment"># -c 并发数</span></span><br><span class="line"><span class="comment"># url 目标压力测试地址</span></span><br></pre></td></tr></table></figure></li><li>参考项<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 每秒接收请求数 &#x3D;&gt; 尽可能大</span><br><span class="line">Requests per second (mean)</span><br><span class="line"># 每一个请求的耗时情况 &#x3D;&gt; 尽可能小</span><br><span class="line">Time per request (mean, across all concurrent requests)</span><br></pre></td></tr></table></figure></li></ul><p>2.PHP 自身能力</p><ul><li>性能问题：自身代码冗余较多，可读性不佳，并且性能低。</li><li>为什么性能低：PHP 代码需要编译解释为底层语言，这一过程每次请求都会处理一遍，开销大。</li><li>好的方法：多实用 PHP 内置变量、常量、函数。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;摘要&lt;br&gt;对线上站点做压力测试的时候，我们一定要将请求数和并发数，特别是并发数要设置的比较低，我们不能对线上的网站造成压力问题，不管是自己的还是别人的。&lt;br&gt;PHP性能问题一般不会超过占整个项目性能的50%，一般在30%~40%。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;PHP 性能问
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://jas-wang.fun/categories/PHP/"/>
    
    
      <category term="php底层优化" scheme="http://jas-wang.fun/tags/php%E5%BA%95%E5%B1%82%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
